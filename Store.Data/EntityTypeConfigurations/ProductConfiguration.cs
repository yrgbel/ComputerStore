// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6

using Store.Model.POCO_Entities;

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Store.Data
{

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class ProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Product>
    {
        public ProductConfiguration()
            : this("dbo")
        {
        }

        public ProductConfiguration(string schema)
        {
            ToTable("Product", schema);
            HasKey(x => x.ProductId);

            Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.ProductPrice).HasColumnName(@"ProductPrice").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ProductImage).HasColumnName(@"ProductImage").HasColumnType("varbinary(max)").IsOptional();
            Property(x => x.ProductDescription).HasColumnName(@"ProductDescription").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ProductQuanity).HasColumnName(@"ProductQuanity").HasColumnType("decimal").IsRequired().HasPrecision(22,4);
            Property(x => x.ProductBrandId).HasColumnName(@"ProductBrandId").HasColumnType("int").IsOptional();
            Property(x => x.ProductManufacturerId).HasColumnName(@"ProductManufacturerId").HasColumnType("int").IsOptional();
            Property(x => x.ProductCode).HasColumnName(@"ProductCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.ProductSubCategoryId).HasColumnName(@"ProductSubCategoryId").HasColumnType("int").IsRequired();
            Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryId").HasColumnType("int").IsRequired();
            Property(x => x.ProductDiscount).HasColumnName(@"ProductDiscount").HasColumnType("int").IsOptional();
            Property(x => x.ProductImageMimeType).HasColumnName(@"ProductImageMimeType").HasColumnType("nvarchar").HasMaxLength(15).IsOptional();

            // Foreign keys
            HasOptional(a => a.ProductBrand).WithMany(b => b.Products).HasForeignKey(c => c.ProductBrandId).WillCascadeOnDelete(false); // ProductBrand_Product
            HasOptional(a => a.ProductManufacturer).WithMany(b => b.Products).HasForeignKey(c => c.ProductManufacturerId).WillCascadeOnDelete(false); // ProductManufacterer_Product
            HasRequired(a => a.ProductSubCategory).WithMany(b => b.Products).HasForeignKey(c => new { c.ProductSubCategoryId, c.ProductCategoryId }).WillCascadeOnDelete(false); // ProductSubCategory_Product
        }
    }

}
// </auto-generated>
