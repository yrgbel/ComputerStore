// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6

using Store.Model.POCO_Entities;

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Store.Data
{

    // Customer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class CustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Customer>
    {
        public CustomerConfiguration()
            : this("dbo")
        {
        }

        public CustomerConfiguration(string schema)
        {
            ToTable("Customer", schema);
            HasKey(x => x.CustomerId);

            Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.CustomerEmail).HasColumnName(@"CustomerEmail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CustomerPatronymic).HasColumnName(@"CustomerPatronymic").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.CustomerLastName).HasColumnName(@"CustomerLastName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(40);
            Property(x => x.CustomerAddress).HasColumnName(@"CustomerAddress").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CustomerCity).HasColumnName(@"CustomerCity").HasColumnType("nvarchar").IsRequired().HasMaxLength(15);
            Property(x => x.CustomerRegion).HasColumnName(@"CustomerRegion").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.CustomerCountry).HasColumnName(@"CustomerCountry").HasColumnType("nvarchar").IsRequired().HasMaxLength(20);
        }
    }

}
// </auto-generated>
